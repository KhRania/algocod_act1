#!/usr/bin/env python
import rospy
from geometry_msgs.msg import Pose
from geometry_msgs.msg import Twist

def publisher():
    rospy.init_node('pose_publisher', anonymous=True)
    rospy.init_node('/turtle1/cmd_vel', anonymous=True)
    pub = rospy.Publisher('pose', Pose, queue_size=1)
    pub1 = rospy.Publisher('vitesse', Twist, queue_size=1)
   
    rate = rospy.Rate(2) # Hz
    vel_msg = Twist()
    vel_msg.linear.x=5.0
    while not rospy.is_shutdown():
        p = Pose()
        p.position.x = 0.5
        p.position.y = -0.1
        p.position.z = 1.0
        # Make sure the quaternion is valid and normalized
        #p.orientation.x = 0.0
        #p.orientation.x = 0.0
        #p.orientation.x = 0.0
        #p.orientation.w = 1.0
        pub.publish(p)
        pub1.publish(vel_msg)
        rate.sleep()

if __name__ == '__main__':
    try:
        publisher()
    except rospy:
        pass
